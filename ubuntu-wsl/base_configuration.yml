---
- name: Base Configuration
  hosts: localhost
  become: true
  gather_facts: true

  vars_files:
    - vars.yml

  tasks:
    - name: Install Homebrew
      block:
        - name: Check for Homebrew
          stat: path=/home/{{ local_user }}/.linuxbrew/bin/brew
          regsiter: homebrew_installed

        - name: Install Homebrew
          ansible.builtin.git:
            repo: git@github.com:Homebrew/brew.git
            dest: /home/{{ local_user }}/.linuxbrew
          shell: |
            eval "$(.linuxbrew/bin/brew shellenv)"
            brew update --force --quiet
            echo 'eval "$(/home/{{ local_user }}/.linuxbrew/bin/brew shellenv)"' >> ~/.zshrc
          when: not homebrew_installed.stat.exists

      when: install_homebrew

    - name: Install Cargo/Rust
      block:
        - name: Check for Cargo isntallation
          stat: path=/home/{{local_user }}/.cargo/bin/cargo
          register: cargo_installed

        - name: Download Cargo installer
          get_url:
            url: https://sh.rustup.rs
            dest: /tmp/sh.rustup.rs
            mode: "0755"
            force: "yes"
          when: not cargo_installed.stat.exists

        - name: Install Rust/Cargo
          shell: |
            /tmp/sh.rustup.rs -y
            [ -f ~/.cargo/env ] && source $HOME/.cargo/env
          when: not cargo_installed.stat.exists

      when: install_rust

    - name: Upgrade all packages
      apt:
        name: "*"
        state: latest

    - name: Install base packages
      apt:
        name:
          - aspell
          - aspell-en
          - autoconf
          - build-essential
          - clang-format
          - cmake
          - curl
          - direnv
          - editorconfig
          - feh
          - flatpak
          - gettext
          - git
          - glslang-dev
          - glslang-tools
          - gnuplot
          - gnutls-bin
          - gnutls-dev
          - graphviz
          - install
          - libacl1-dev
          - libdbus-1-dev
          - libfontconfig1-dev
          - libfreetype6-dev
          - libgccjit-11-dev
          - libgif-dev
          - libharfbuzz-dev
          - libjansson-dev
          - libjansson4
          - libmagickwand-dev
          - libncurses-dev
          - libnss3-tools
          - libpcsc-perl
          - libpcsclite-dev
          - libpcsclite1
          - libssl-dev
          - libtinfo-dev
          - libtool
          - libtool-bin
          - libtree-sitter-dev
          - libx11-dev
          - libxaw7-dev
          - libxcb-xfixes0-dev
          - libxcb-xinerama0-dev
          - libxinerama-dev
          - libxkbcommon-dev
          - mpv
          - nala
          - ninja-build
          - nodejs
          - npm
          - openjdk-19-jdk
          - opensc
          - pcsc-tools
          - pkg-config
          - procps
          - python3
          - python3-pip
          - sbcl
          - shellcheck
          - shfmt
          - sqlite3
          - steam-devices
          - stow
          - texinfo
          - texlive-fonts-extra
          - texlive-fonts-recommended
          - texlive-latex-base
          - texlive-latex-extra
          - tidy
          - tmux
          - unzip
          - wl-clipboard
          - xclip
          - xdotool
          - zsh
        state: installed

    - name: Install Homebrew packages
      community.general.homebrew:
        name:
          - infracost
          - terraform-docs
          - terragrunt
          - terrascan
          - tflint
          - tfsec
          - trivy
        state: present

    - name: Install Rust packages
      community.general.cargo:
        name:
          - alacritty
          - bat
          - bottom
          - cargo
          - cargo-update
          - delta
          - editorconfig
          - fd-find
          - install
          - lsd
          - myfly
          - rm-improved
          - starship
          - tree-sitter-cli
          - zoxide

    - name: Install Rust packages with locked dependencies
      community.general.cargo:
        name:
          - yazi-fm
          - yazi-cli
        locked: true

    - name: Install ripgrep with pcre2
      shell: |
        cargo install ripgrep --features pcre2

    - name: Create ~/Dev if it does not exist
      ansible.builtin.file:
        path: ~/Dev
        state: directory
        mode: "0755"

    - name: Create ~/Work if it does not exist
      ansible.builtin.file:
        path: ~/Work
        state: directory
        mode: "0755"

    - name: Install OMZ
      shell: sh -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"

    - name: Install Tmux Package Manager
      shell: git clone https://github.com/tmux-plugins/tpm ~/.config/tmux/plugins/tpm

    - name: Install Neovim from source
      shell: |
        git clone https://github.com/neovim/neovim ~/Dev/neovim
        cd ~/Dev/neovim
        make CMAKE_BUILD_TYPE=Release
        sudo make install
      when: install_neovim

    - name: Run stow
      shell: |
        cd ~/.dotfiles
        stow . --adopt --target ~/ --verbose=2
        git reset --hard
      register: result
      changed_when: 'result.stderr is search("LINK: ")'

    - name: Allow wheel group to sudo without a password
      lineinfile:
        dest: /etc/sudoers
        state: present
        regexp: "^%wheel"
        line: "%wheel ALL=(ALL) NOPASSWD: ALL"
        validate: visudo -cf %s
      when: local_user_passwordless_sudo
